import os, sys

library_dependencies = ['boost_system'
                      , 'boost_filesystem'
                      , 'boost_timer'
                      , 'boost_program_options'
                      , 'pthread']

env = Environment(LIBS = library_dependencies,
                  CCFLAGS = ['-std=c++11', '-pedantic'])

# Add Boost
env.Append(CPPPATH = ['./src/external/', os.environ.get('BOOST_LIB_PATH','')])
env.Append(LIBPATH = [os.environ.get('BOOST_LIB_PATH','')])

# Allow overriding of the default compiler
if os.environ.has_key('CXX'):
  custom_CXX = os.environ['CXX']
  print 'Replacing default CXX with ' + custom_CXX
  env.Replace(CXX = custom_CXX) 

# Programs

release_env = env.Clone()

# ???
if release_env['PLATFORM'] != 'darwin':
    release_env['LINKFLAGS'] = '--static'
release_env.Append(CCFLAGS = ['-O2'])
release_env.Append(CCFLAGS = ['-Wall'])

barn_agent_sources = Glob('./src/[!main]*.cpp')

release_env.Program('barn-agent', ['src/main.cpp'] + barn_agent_sources)


# Testing

test_env = env.Clone()
test_env.Append(LIBS = ['gmock'])
test_env.Append(LIBS = ['gtest'])
test_env.Append(LIBS = ['pthread'])  # TODO: pthread must be last LIB, why?
test_env.Append(LIBS = ['barnagent_sources'])
test_env.Append(CPPPATH = ['test'])
test_env.Append(CPPPATH = ['src'])
test_env.Append(CPPPATH = ['test/gmock-1.7.0', 'test/gmock-1.7.0/include'])
test_env.Append(CPPPATH = ['test/gtest-1.7.0', 'test/gtest-1.7.0/include'])
test_env.Append(LIBPATH = ['test'])
test_env.Append(CCFLAGS = ['-g'])
test_env.Append(CCFLAGS = ['-Wall'])

test_env.Library('test/gmock', ['test/gmock-1.7.0/src/gmock-all.cc'])
test_env.Library('test/gtest', ['test/gtest-1.7.0/src/gtest-all.cc'])

barn_test = test_env.Program('test/barn_test', Glob('./test/*.cpp'))

# Put all non-test source files in a lib for testing (avoids scons 'two environments' errors).
barn_agent_lib = release_env.Library('test/barnagent_sources', barn_agent_sources)
Depends(barn_test, barn_agent_lib)

